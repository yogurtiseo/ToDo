# ---------------------------------------------------------------------------------
# 파일명: pyproject.toml
# 이 파일은 Poetry 프로젝트 설정 파일이다.
# - 프로젝트 이름, 버전, 설명
# - 어떤 파이썬 폴더를 포함할지
# - 어떤 외부 패키지가 필요한지
# - 개발용 도구는 무엇인지
# - 프로젝트를 어떻게 빌드할지
# 등을 정의한다.
# -----------------------------------------------------------------------------------

[tool.poetry]

name = "todo"                                     # 프로젝트 이름 (폴더 이름과는 다를 수 있음)
version = "0.1.0"                                 # 프로젝트 버전 (프로젝트가 업데이트되면 바꿔야 함)
description = ""                                  # 프로젝트에 대한 간단한 설명
authors = ["eunhyeok <eunhyeok071023@gmail.com>"] # 만든 사람 정보(이름, 이메일)
readme = "README.md"                              # 프로젝트의 소개 문서 파일 이름 (보통 깃허브 첫 화면에 표시됨)

# 포함할 파이썬 폴더를 지정합니다
# - 여기서는 'api' 폴더만 프로젝트에 포함되도록 설정
packages = [
    { include = "api" }
]

# ------------------------------------------------------------------------------
# 실제 프로젝트 실행하기 위해 필요한 패키지들
# --------------------------------------------------------------------------------
[tool.poetry.dependencies]

python = "^3.12" # * 이 프로젝트는 파이썬 3.12  이상에서 작동함

# * FastAPI는 웹 API를 서버를 만들기 위한 주요 프레임워크
fastapi = "^0.115.12"

uvicorn = { extras = ["standard"], version = "^0.34.0" }
# * Uvicorn: FastAPI 앱을 실행하는 웹 서버 도구
# - "standard" 옵션을 통해 자동 재시작, 로깅, 보안 등 추가 기능도 포함됨

sqlalchemy = "^2.0.40"
# * SQLAlchemy: 파이썬 코드로 데이터베이스를 다루는 도구 (ORM)

asyncpg = "^0.30.0"
# * asyncpg: PostgresSQL 데이터베이스에 비동기로 연결할 수 있게 해주는 드라이버


psycopg2-binary = "^2.9.10"
# * psycopg2-binary: PostgreSQL에 동기 방식으로 연결할 수 있는 드라이버
# - 비동기가 아닌 일반 DB 초기화 코드 등에서 사용됨

# --------------------------------------------------------------------------------
# 개발할 때만 사용하는 도구들(배포에는 포함되지 않음)
# -------------------------------------------------------------------------------
[tool.poetry.group.dev.dependencies]


pytest-asyncio = "^0.26.0"
# pytest-asyncio: async 함수 테스트에 필요한 도구
# 예: async def 로 만든 함수에서 await를 사용해 테스트 가능

aiosqlite = "^0.21.0"
# aiosqlite: SQLite를 비동기로 사용할 수 있게 해주는 드라이버
# 테스트용 DB 환경으로 자주 사용됨

httpx = "^0.28.1"
# httpx: HTTP 요청을 테스트할 수 있는 도구 (requests와 비슷함)
# 비동기 방식도 지원하며 FastAPI 테스트 코드에서 사용됨



# ---------------------------------------------------------------------
# 프로젝트를 빌드(포장하거나 배포)할 때 사용하는 설정
# -----------------------------------------------------------------------
[build-system]


requires = ["poetry-core"]                #  빌드할 때 필요한 핵심 모듈
build-backend = "poetry.core.masonry.api" #  실제 빌드를 실행하는 백엔드 도구
